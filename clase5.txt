Validaciòn de formularios:
import { FormControl, FormGroup, Validators } from '@angular/forms';

**el validator es un array, por eso va [].
**para la creacion del formulario, desde el componente se utiliza FormGroup:
Ejemplo:
this.form = new FormGroup({
      nombre: new FormControl<string>('', [Validators.minLength(2), Validators.required])})

**libreria Formly(json powered / Dynamic forms in Angular

para formularios template(oldSchool), se usa en el tag form:
<form #form="ngForm"> y para el submit: (ngSubmit)="save(form)"

ngModel se usa en los inputs para entrada y salida. Ejecuta evento o llevar valores
se necesita si o si el modelo para trabajar en los templates form

(ngModelChange)
******************************************************************************
Inyeccion de dependencias:
service worker = ejecucion en segundo plano(?
servicios = para conectar con el back y resolver temas de apps Angular. Para controlar estados en Angular sin utilizar redux
** generar un servicio:
ng g service(o s)
@injectable => que està disponible en toda la aplicacion

los servicios en angular son inyectables
**si lo voy a usar en una sola pagina, se puede colocar en el component, si no se deja el provider en el services.
se puede usar por componente y por modulo

**control de estado por servicios(comunicar componentes entre si)
**redux = herramienta que se utiliza para controlar los estados. Usarlo cuando realmente se necesite

disrosoft
